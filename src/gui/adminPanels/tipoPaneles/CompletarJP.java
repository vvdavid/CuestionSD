package gui.adminPanels.tipoPaneles;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class CompletarJP extends javax.swing.JPanel {

    DefaultListModel<String> modelo = new DefaultListModel();
    public int respuestas;

    public CompletarJP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        completarJPModificar = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        completarJPCorrectas = new javax.swing.JList<String>(modelo);

        completarJPModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/modify.png"))); // NOI18N
        completarJPModificar.setText("Modificar respuesta");
        completarJPModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completarJPModificarActionPerformed(evt);
            }
        });

        jLabel21.setText("Respuestas correctas");

        completarJPCorrectas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane10.setViewportView(completarJPCorrectas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(completarJPModificar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane10)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(completarJPModificar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void completarJPModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completarJPModificarActionPerformed
        int index = completarJPCorrectas.getSelectedIndex();
        if (index != -1) {
            String input = JOptionPane.showInputDialog("Respuesta:");
            modelo.setElementAt(input.length() == 0 ? " " : input, index);
        }

    }//GEN-LAST:event_completarJPModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> completarJPCorrectas;
    private javax.swing.JButton completarJPModificar;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JScrollPane jScrollPane10;
    // End of variables declaration//GEN-END:variables

    public void setRespuestas(int respuestas) {
        this.respuestas = respuestas;
        modelo.clear();
        for (int i = 0; i < respuestas; i++) {
            modelo.addElement("Respuesta #" + (i + 1));
        }
    }
}
